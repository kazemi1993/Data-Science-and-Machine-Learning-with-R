{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO4uhMobPG/tJYkaeV5RVUM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":5,"metadata":{"id":"6O321q_vcW2N","executionInfo":{"status":"ok","timestamp":1746672892180,"user_tz":-210,"elapsed":1983,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"outputs":[],"source":["!pip install -q rpy2"]},{"cell_type":"code","source":["%load_ext rpy2.ipython"],"metadata":{"id":"jMGlcWoXcbdJ","executionInfo":{"status":"ok","timestamp":1746672894074,"user_tz":-210,"elapsed":1899,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["%%R\n","\n","#install.packages('rpart)\n","library(rpart)"],"metadata":{"id":"k2RBoduRcck7","executionInfo":{"status":"ok","timestamp":1746672894074,"user_tz":-210,"elapsed":26,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["the formula is in the format:\n","\n","outcome ~ predictor1+predictor2+predictor3+ect.\n","\n","data= specifies the data frame\n","\n","method= \"class\" for a classification tree\n","\n","\"anova\" for a regression tree\n","\n","control= optional parameters for controlling tree growth."],"metadata":{"id":"lmDPw8TxzLei"}},{"cell_type":"markdown","source":["# Sample Data\n"],"metadata":{"id":"Ws66KuEGzTXF"}},{"cell_type":"markdown","source":["We'll use the [kyphosis](https://http://www.inside-r.org/r-doc/rpart/kyphosis) data frame which has 81 rows and 4 columns. representing data on children who have had corrective spinal surgery. It has the following columns:\n","\n","Kyphosis-a factor with levels absent present indicating if a kyphosis (a type of deformation) was present after the operation.\n","\n","Age-in months\n","\n","Number-the number of vertebrae involved\n","\n","Start-the number of the first (topmost) vertebra operated on."],"metadata":{"id":"3TFtw759zktO"}},{"cell_type":"code","source":["%%R\n","\n","str(kyphosis)"],"metadata":{"id":"JN5olXFDcezE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746672900892,"user_tz":-210,"elapsed":27,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"a0233050-b849-4a9b-e7bf-a44cfd9fb89d"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["'data.frame':\t81 obs. of  4 variables:\n"," $ Kyphosis: Factor w/ 2 levels \"absent\",\"present\": 1 1 2 1 1 1 1 1 1 2 ...\n"," $ Age     : int  71 158 128 2 1 1 61 37 113 59 ...\n"," $ Number  : int  3 3 4 5 4 2 2 3 2 6 ...\n"," $ Start   : int  5 14 5 1 15 16 17 16 16 12 ...\n"]}]},{"cell_type":"code","source":["%%R\n","\n","head(kyphosis)"],"metadata":{"id":"tfK-GCOpce63","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746672901386,"user_tz":-210,"elapsed":30,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"acfef9bd-efc9-4a80-b32b-126bfaa2217c"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["  Kyphosis Age Number Start\n","1   absent  71      3     5\n","2   absent 158      3    14\n","3  present 128      4     5\n","4   absent   2      5     1\n","5   absent   1      4    15\n","6   absent   1      2    16\n"]}]},{"cell_type":"code","source":["%%R\n","\n","tree <- rpart(Kyphosis ~ . , method='class', data= kyphosis)\n"],"metadata":{"id":"F78CvY1Yce8Q","executionInfo":{"status":"ok","timestamp":1746672909520,"user_tz":-210,"elapsed":396,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["# Examining Results of the Tree Model"],"metadata":{"id":"LsWqcTRv0e4m"}},{"cell_type":"code","source":["# printcp(fit)\tdisplay cp table\n","# plotcp(fit)\tplot cross-validation results\n","# rsq.rpart(fit)\tplot approximate R-squared and relative error for different splits (2 plots). labels are only appropriate for the \"anova\" method.\n","# print(fit)\tprint results\n","# summary(fit)\tdetailed results including surrogate splits\n","# plot(fit)\tplot decision tree\n","# text(fit)\tlabel the decision tree plot\n","# post(fit, file=)\tcreate postscript plot of decision tree"],"metadata":{"id":"W4rPwjrnce9f","executionInfo":{"status":"aborted","timestamp":1746672894075,"user_tz":-210,"elapsed":12,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%R\n","\n","printcp(tree)"],"metadata":{"id":"N4hKRA8Gce-0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746672971114,"user_tz":-210,"elapsed":33,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"b2edb5b3-b6cf-4241-c898-7111f7bf5aea"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Classification tree:\n","rpart(formula = Kyphosis ~ ., data = kyphosis, method = \"class\")\n","\n","Variables actually used in tree construction:\n","[1] Age   Start\n","\n","Root node error: 17/81 = 0.20988\n","\n","n= 81 \n","\n","        CP nsplit rel error xerror    xstd\n","1 0.176471      0   1.00000 1.0000 0.21559\n","2 0.019608      1   0.82353 1.1765 0.22829\n","3 0.010000      4   0.76471 1.1765 0.22829\n"]}]},{"cell_type":"markdown","source":["# Tree Visualization"],"metadata":{"id":"Rj6VPUe90oiG"}},{"cell_type":"code","source":["%%R\n","\n","plot(tree, uniform=TRUE, main=\"Main Title\")\n","text(tree, use.n=TRUE, all=TRUE)"],"metadata":{"id":"l6m06ZFwcfAE","colab":{"base_uri":"https://localhost:8080/","height":497},"executionInfo":{"status":"ok","timestamp":1746672989703,"user_tz":-210,"elapsed":13,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"b85ee879-ce94-4d5f-dfab-f09cb2aa4ffe"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{}}]},{"cell_type":"code","source":["%%R\n","\n","install.packages('rpart.plot')\n","library(rpart.plot)"],"metadata":{"id":"uIFGcvgVcfBS","colab":{"base_uri":"https://localhost:8080/","height":191},"executionInfo":{"status":"ok","timestamp":1746673018344,"user_tz":-210,"elapsed":7359,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"8b1ec7f9-dc77-4509-8e0b-d1241c9128c2"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","trying URL 'https://cran.rstudio.com/src/contrib/rpart.plot_3.1.2.tar.gz'\n","Content type 'application/x-gzip' length 673083 bytes (657 KB)\n","==================================================\n","downloaded 657 KB\n","\n","\n","The downloaded source packages are in\n","\t‘/tmp/Rtmptr2ZcQ/downloaded_packages’\n"]},"metadata":{}}]},{"cell_type":"code","source":["%%R\n","\n","prp(tree)"],"metadata":{"id":"qIGIxXKmcfCh","colab":{"base_uri":"https://localhost:8080/","height":497},"executionInfo":{"status":"ok","timestamp":1746673019888,"user_tz":-210,"elapsed":1042,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"cdf8c51e-d365-40db-d740-1616be66e4bb"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Random Forests"],"metadata":{"id":"-1uLEuCP01W2"}},{"cell_type":"code","source":["%%R\n","\n","install.packages('randomForest')\n","# Random Forest prediction of Kyphosis data\n","library(randomForest)"],"metadata":{"id":"M8fk1qQacfDq","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1746673071172,"user_tz":-210,"elapsed":7458,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"bd706ad9-a965-48d9-9d8d-814b504a1d08"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["Installing package into ‘/usr/local/lib/R/site-library’\n","(as ‘lib’ is unspecified)\n","trying URL 'https://cran.rstudio.com/src/contrib/randomForest_4.7-1.2.tar.gz'\n","Content type 'application/x-gzip' length 81974 bytes (80 KB)\n","==================================================\n","downloaded 80 KB\n","\n","\n","The downloaded source packages are in\n","\t‘/tmp/Rtmptr2ZcQ/downloaded_packages’\n","randomForest 4.7-1.2\n","Type rfNews() to see new features/changes/bug fixes.\n"]},"metadata":{}}]},{"cell_type":"code","source":["%%R\n","\n","model <- randomForest(Kyphosis ~ .,   data=kyphosis)\n"],"metadata":{"id":"tycafZj7cfE3","executionInfo":{"status":"ok","timestamp":1746673075941,"user_tz":-210,"elapsed":450,"user":{"displayName":"Star","userId":"16069218276966640711"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["%%R\n","\n","print(model) # view results"],"metadata":{"id":"EKpK4U7ZcfGV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746673085424,"user_tz":-210,"elapsed":29,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"ed55f449-1e7a-4ff8-ed97-5e45ea0440cb"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Call:\n"," randomForest(formula = Kyphosis ~ ., data = kyphosis) \n","               Type of random forest: classification\n","                     Number of trees: 500\n","No. of variables tried at each split: 1\n","\n","        OOB estimate of  error rate: 19.75%\n","Confusion matrix:\n","        absent present class.error\n","absent      61       3   0.0468750\n","present     13       4   0.7647059\n"]}]},{"cell_type":"code","source":["%%R\n","\n","importance(model) # importance of each predictor"],"metadata":{"id":"cndoGbJLcfHp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746673093780,"user_tz":-210,"elapsed":14,"user":{"displayName":"Star","userId":"16069218276966640711"}},"outputId":"cf56e1aa-7d1a-4368-ac38-847add7d2079"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["       MeanDecreaseGini\n","Age            8.590906\n","Number         5.619968\n","Start         10.048062\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"-ePSKP_L1Kog"},"execution_count":null,"outputs":[]}]}